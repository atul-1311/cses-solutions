#include <bits/stdc++.h>
using namespace std;

void solve(int node, vector<bool> &visited, map<int,vector<int>> &adj, int &x){
      if(visited[node])
      return;
      
      visited[node]=true;
      x=node;
      
      for(auto neighbour:adj[node]){
            solve(neighbour,visited,adj,x);
      }
}

void buildRoads(int n, int m, map<int,vector<int>> &adj){
      vector<bool> visited(n+1, false);
      vector<vector<int>> ans;
      int count=0;
      int x=0;
      
      for(int i=1;i<=n;i++){
            if(!visited[i]){
                  if(x!=0){
                        ans.push_back({x,i});
                  }
                  count++;
                  solve(i,visited,adj,x);
            }
      }
      cout<<count-1<<endl;
      
      for(int i=0;i<ans.size();i++){
            for(int j=0;j<2;j++){
                  cout<<ans[i][j]<<" ";
            }
            cout<<endl;
      }
}

int main(){
     int n,m;
     cin>>n>>m;
     
     map<int,vector<int>> adj;
     for(int i=0;i<m;i++){
           int x,y;
           cin>>x>>y;
           adj[x].push_back(y);
           adj[y].push_back(x);
     }
     
     buildRoads(n,m,adj);
}